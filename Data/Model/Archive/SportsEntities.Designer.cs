//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Franc__2003926C", "Franchise", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.Franchise), "FranchiseName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchiseName), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Franc__20C2AC7B", "Franchise", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.Franchise), "FranchiseSportType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchiseSportType), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Franc__20F7B6A5", "Franchise", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.Franchise), "FranchisePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchisePosition), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__franc__4905A7FF", "Franchise", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.Franchise), "FranchiseTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchiseTeam), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__owner__64ADC274", "FranchiseOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.FranchiseOwner), "Franchise", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.Franchise), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Sport__1B3EDD4F", "SportType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Model.SportType), "Franchise", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.Franchise), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Perso__79DDE984", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.Person), "FranchisePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchisePosition), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Posit__7AD20DBD", "PositionCode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.PositionCode), "FranchisePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchisePosition), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__Sport__21B6D0B4", "SportType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.SportType), "FranchiseSportType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchiseSportType), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Franchise__seaso__49F9CC38", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.Season), "FranchiseTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.FranchiseTeam), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Person__SportTyp__298CFCA6", "SportTypeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.SportTypeGroup), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.Person), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__PositionC__Sport__760D58A0", "SportType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.SportType), "PositionCode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.PositionCode), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Season__SportTyp__27D9BE5E", "SportType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.SportType), "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.Season), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__SportType__Sport__1BFDF75E", "SportTypeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.SportTypeGroup), "SportType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.SportType), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__StadiumSu__Sport__07F6FEB1", "SportTypeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Model.SportTypeGroup), "StadiumSurfaceCode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.StadiumSurfaceCode), true)]
[assembly: EdmRelationshipAttribute("SportsModel", "FK__Stadium__Stadium__593C0FC8", "StadiumSurfaceCode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Model.StadiumSurfaceCode), "Stadium", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Model.Stadium), true)]

#endregion

namespace Data.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SportsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SportsEntities object using the connection string found in the 'SportsEntities' section of the application configuration file.
        /// </summary>
        public SportsEntities() : base("name=SportsEntities", "SportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportsEntities object.
        /// </summary>
        public SportsEntities(string connectionString) : base(connectionString, "SportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SportsEntities object.
        /// </summary>
        public SportsEntities(EntityConnection connection) : base(connection, "SportsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Franchise> Franchises
        {
            get
            {
                if ((_Franchises == null))
                {
                    _Franchises = base.CreateObjectSet<Franchise>("Franchises");
                }
                return _Franchises;
            }
        }
        private ObjectSet<Franchise> _Franchises;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FranchiseName> FranchiseNames
        {
            get
            {
                if ((_FranchiseNames == null))
                {
                    _FranchiseNames = base.CreateObjectSet<FranchiseName>("FranchiseNames");
                }
                return _FranchiseNames;
            }
        }
        private ObjectSet<FranchiseName> _FranchiseNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FranchiseOwner> FranchiseOwners
        {
            get
            {
                if ((_FranchiseOwners == null))
                {
                    _FranchiseOwners = base.CreateObjectSet<FranchiseOwner>("FranchiseOwners");
                }
                return _FranchiseOwners;
            }
        }
        private ObjectSet<FranchiseOwner> _FranchiseOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FranchisePosition> FranchisePositions
        {
            get
            {
                if ((_FranchisePositions == null))
                {
                    _FranchisePositions = base.CreateObjectSet<FranchisePosition>("FranchisePositions");
                }
                return _FranchisePositions;
            }
        }
        private ObjectSet<FranchisePosition> _FranchisePositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FranchiseSportType> FranchiseSportTypes
        {
            get
            {
                if ((_FranchiseSportTypes == null))
                {
                    _FranchiseSportTypes = base.CreateObjectSet<FranchiseSportType>("FranchiseSportTypes");
                }
                return _FranchiseSportTypes;
            }
        }
        private ObjectSet<FranchiseSportType> _FranchiseSportTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FranchiseTeam> FranchiseTeams
        {
            get
            {
                if ((_FranchiseTeams == null))
                {
                    _FranchiseTeams = base.CreateObjectSet<FranchiseTeam>("FranchiseTeams");
                }
                return _FranchiseTeams;
            }
        }
        private ObjectSet<FranchiseTeam> _FranchiseTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PositionCode> PositionCodes
        {
            get
            {
                if ((_PositionCodes == null))
                {
                    _PositionCodes = base.CreateObjectSet<PositionCode>("PositionCodes");
                }
                return _PositionCodes;
            }
        }
        private ObjectSet<PositionCode> _PositionCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Season> Seasons
        {
            get
            {
                if ((_Seasons == null))
                {
                    _Seasons = base.CreateObjectSet<Season>("Seasons");
                }
                return _Seasons;
            }
        }
        private ObjectSet<Season> _Seasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportType> SportTypes
        {
            get
            {
                if ((_SportTypes == null))
                {
                    _SportTypes = base.CreateObjectSet<SportType>("SportTypes");
                }
                return _SportTypes;
            }
        }
        private ObjectSet<SportType> _SportTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportTypeGroup> SportTypeGroups
        {
            get
            {
                if ((_SportTypeGroups == null))
                {
                    _SportTypeGroups = base.CreateObjectSet<SportTypeGroup>("SportTypeGroups");
                }
                return _SportTypeGroups;
            }
        }
        private ObjectSet<SportTypeGroup> _SportTypeGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stadium> Stadia
        {
            get
            {
                if ((_Stadia == null))
                {
                    _Stadia = base.CreateObjectSet<Stadium>("Stadia");
                }
                return _Stadia;
            }
        }
        private ObjectSet<Stadium> _Stadia;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StadiumSurfaceCode> StadiumSurfaceCodes
        {
            get
            {
                if ((_StadiumSurfaceCodes == null))
                {
                    _StadiumSurfaceCodes = base.CreateObjectSet<StadiumSurfaceCode>("StadiumSurfaceCodes");
                }
                return _StadiumSurfaceCodes;
            }
        }
        private ObjectSet<StadiumSurfaceCode> _StadiumSurfaceCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateCode> StateCodes
        {
            get
            {
                if ((_StateCodes == null))
                {
                    _StateCodes = base.CreateObjectSet<StateCode>("StateCodes");
                }
                return _StateCodes;
            }
        }
        private ObjectSet<StateCode> _StateCodes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Franchises EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFranchises(Franchise franchise)
        {
            base.AddObject("Franchises", franchise);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FranchiseNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFranchiseNames(FranchiseName franchiseName)
        {
            base.AddObject("FranchiseNames", franchiseName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FranchiseOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFranchiseOwners(FranchiseOwner franchiseOwner)
        {
            base.AddObject("FranchiseOwners", franchiseOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FranchisePositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFranchisePositions(FranchisePosition franchisePosition)
        {
            base.AddObject("FranchisePositions", franchisePosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FranchiseSportTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFranchiseSportTypes(FranchiseSportType franchiseSportType)
        {
            base.AddObject("FranchiseSportTypes", franchiseSportType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FranchiseTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFranchiseTeams(FranchiseTeam franchiseTeam)
        {
            base.AddObject("FranchiseTeams", franchiseTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PositionCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositionCodes(PositionCode positionCode)
        {
            base.AddObject("PositionCodes", positionCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasons(Season season)
        {
            base.AddObject("Seasons", season);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportTypes(SportType sportType)
        {
            base.AddObject("SportTypes", sportType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportTypeGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportTypeGroups(SportTypeGroup sportTypeGroup)
        {
            base.AddObject("SportTypeGroups", sportTypeGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stadia EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStadia(Stadium stadium)
        {
            base.AddObject("Stadia", stadium);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StadiumSurfaceCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStadiumSurfaceCodes(StadiumSurfaceCode stadiumSurfaceCode)
        {
            base.AddObject("StadiumSurfaceCodes", stadiumSurfaceCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateCodes(StateCode stateCode)
        {
            base.AddObject("StateCodes", stateCode);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="Franchise")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Franchise : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Franchise object.
        /// </summary>
        /// <param name="franchiseId">Initial value of the FranchiseId property.</param>
        /// <param name="ownerid">Initial value of the ownerid property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static Franchise CreateFranchise(global::System.Int32 franchiseId, global::System.Int32 ownerid, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            Franchise franchise = new Franchise();
            franchise.FranchiseId = franchiseId;
            franchise.ownerid = ownerid;
            franchise.StartDt = startDt;
            franchise.mod_usr = mod_usr;
            franchise.mod_date = mod_date;
            return franchise;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FranchiseId
        {
            get
            {
                return _FranchiseId;
            }
            set
            {
                if (_FranchiseId != value)
                {
                    OnFranchiseIdChanging(value);
                    ReportPropertyChanging("FranchiseId");
                    _FranchiseId = StructuralObject.SetValidValue(value, "FranchiseId");
                    ReportPropertyChanged("FranchiseId");
                    OnFranchiseIdChanged();
                }
            }
        }
        private global::System.Int32 _FranchiseId;
        partial void OnFranchiseIdChanging(global::System.Int32 value);
        partial void OnFranchiseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ownerid
        {
            get
            {
                return _ownerid;
            }
            set
            {
                OnowneridChanging(value);
                ReportPropertyChanging("ownerid");
                _ownerid = StructuralObject.SetValidValue(value, "ownerid");
                ReportPropertyChanged("ownerid");
                OnowneridChanged();
            }
        }
        private global::System.Int32 _ownerid;
        partial void OnowneridChanging(global::System.Int32 value);
        partial void OnowneridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTypeCode
        {
            get
            {
                return _SportTypeCode;
            }
            set
            {
                OnSportTypeCodeChanging(value);
                ReportPropertyChanging("SportTypeCode");
                _SportTypeCode = StructuralObject.SetValidValue(value, true, "SportTypeCode");
                ReportPropertyChanged("SportTypeCode");
                OnSportTypeCodeChanged();
            }
        }
        private global::System.String _SportTypeCode;
        partial void OnSportTypeCodeChanging(global::System.String value);
        partial void OnSportTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Franc__2003926C", "FranchiseName")]
        public EntityCollection<FranchiseName> FranchiseNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchiseName>("SportsModel.FK__Franchise__Franc__2003926C", "FranchiseName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchiseName>("SportsModel.FK__Franchise__Franc__2003926C", "FranchiseName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Franc__20C2AC7B", "FranchiseSportType")]
        public EntityCollection<FranchiseSportType> FranchiseSportTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchiseSportType>("SportsModel.FK__Franchise__Franc__20C2AC7B", "FranchiseSportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchiseSportType>("SportsModel.FK__Franchise__Franc__20C2AC7B", "FranchiseSportType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Franc__20F7B6A5", "FranchisePosition")]
        public EntityCollection<FranchisePosition> FranchisePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchisePosition>("SportsModel.FK__Franchise__Franc__20F7B6A5", "FranchisePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchisePosition>("SportsModel.FK__Franchise__Franc__20F7B6A5", "FranchisePosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__franc__4905A7FF", "FranchiseTeam")]
        public EntityCollection<FranchiseTeam> FranchiseTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchiseTeam>("SportsModel.FK__Franchise__franc__4905A7FF", "FranchiseTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchiseTeam>("SportsModel.FK__Franchise__franc__4905A7FF", "FranchiseTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__owner__64ADC274", "FranchiseOwner")]
        public FranchiseOwner FranchiseOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FranchiseOwner>("SportsModel.FK__Franchise__owner__64ADC274", "FranchiseOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FranchiseOwner>("SportsModel.FK__Franchise__owner__64ADC274", "FranchiseOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FranchiseOwner> FranchiseOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FranchiseOwner>("SportsModel.FK__Franchise__owner__64ADC274", "FranchiseOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FranchiseOwner>("SportsModel.FK__Franchise__owner__64ADC274", "FranchiseOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Sport__1B3EDD4F", "SportType")]
        public SportType SportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__1B3EDD4F", "SportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__1B3EDD4F", "SportType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportType> SportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__1B3EDD4F", "SportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__1B3EDD4F", "SportType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="FranchiseName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FranchiseName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FranchiseName object.
        /// </summary>
        /// <param name="franchiseNameId">Initial value of the FranchiseNameId property.</param>
        /// <param name="franchiseId">Initial value of the FranchiseId property.</param>
        /// <param name="region">Initial value of the Region property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static FranchiseName CreateFranchiseName(global::System.Int32 franchiseNameId, global::System.Int32 franchiseId, global::System.String region, global::System.String name, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            FranchiseName franchiseName = new FranchiseName();
            franchiseName.FranchiseNameId = franchiseNameId;
            franchiseName.FranchiseId = franchiseId;
            franchiseName.Region = region;
            franchiseName.Name = name;
            franchiseName.StartDt = startDt;
            franchiseName.mod_usr = mod_usr;
            franchiseName.mod_date = mod_date;
            return franchiseName;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FranchiseNameId
        {
            get
            {
                return _FranchiseNameId;
            }
            set
            {
                if (_FranchiseNameId != value)
                {
                    OnFranchiseNameIdChanging(value);
                    ReportPropertyChanging("FranchiseNameId");
                    _FranchiseNameId = StructuralObject.SetValidValue(value, "FranchiseNameId");
                    ReportPropertyChanged("FranchiseNameId");
                    OnFranchiseNameIdChanged();
                }
            }
        }
        private global::System.Int32 _FranchiseNameId;
        partial void OnFranchiseNameIdChanging(global::System.Int32 value);
        partial void OnFranchiseNameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FranchiseId
        {
            get
            {
                return _FranchiseId;
            }
            set
            {
                OnFranchiseIdChanging(value);
                ReportPropertyChanging("FranchiseId");
                _FranchiseId = StructuralObject.SetValidValue(value, "FranchiseId");
                ReportPropertyChanged("FranchiseId");
                OnFranchiseIdChanged();
            }
        }
        private global::System.Int32 _FranchiseId;
        partial void OnFranchiseIdChanging(global::System.Int32 value);
        partial void OnFranchiseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false, "Region");
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Franc__2003926C", "Franchise")]
        public Franchise Franchise
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__2003926C", "Franchise").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__2003926C", "Franchise").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Franchise> FranchiseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__2003926C", "Franchise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__2003926C", "Franchise", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="FranchiseOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FranchiseOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FranchiseOwner object.
        /// </summary>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static FranchiseOwner CreateFranchiseOwner(global::System.Int32 ownerId, global::System.String lastName, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            FranchiseOwner franchiseOwner = new FranchiseOwner();
            franchiseOwner.OwnerId = ownerId;
            franchiseOwner.LastName = lastName;
            franchiseOwner.StartDt = startDt;
            franchiseOwner.mod_usr = mod_usr;
            franchiseOwner.mod_date = mod_date;
            return franchiseOwner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                if (_OwnerId != value)
                {
                    OnOwnerIdChanging(value);
                    ReportPropertyChanging("OwnerId");
                    _OwnerId = StructuralObject.SetValidValue(value, "OwnerId");
                    ReportPropertyChanged("OwnerId");
                    OnOwnerIdChanged();
                }
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, true, "Prefix");
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Middle
        {
            get
            {
                return _Middle;
            }
            set
            {
                OnMiddleChanging(value);
                ReportPropertyChanging("Middle");
                _Middle = StructuralObject.SetValidValue(value, true, "Middle");
                ReportPropertyChanged("Middle");
                OnMiddleChanged();
            }
        }
        private global::System.String _Middle;
        partial void OnMiddleChanging(global::System.String value);
        partial void OnMiddleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__owner__64ADC274", "Franchise")]
        public EntityCollection<Franchise> Franchises
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Franchise>("SportsModel.FK__Franchise__owner__64ADC274", "Franchise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Franchise>("SportsModel.FK__Franchise__owner__64ADC274", "Franchise", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="FranchisePosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FranchisePosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FranchisePosition object.
        /// </summary>
        /// <param name="franchisePositionId">Initial value of the FranchisePositionId property.</param>
        /// <param name="franchiseId">Initial value of the FranchiseId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="positionCodeId">Initial value of the PositionCodeId property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static FranchisePosition CreateFranchisePosition(global::System.Int32 franchisePositionId, global::System.Int32 franchiseId, global::System.Int32 personId, global::System.Int32 positionCodeId, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            FranchisePosition franchisePosition = new FranchisePosition();
            franchisePosition.FranchisePositionId = franchisePositionId;
            franchisePosition.FranchiseId = franchiseId;
            franchisePosition.PersonId = personId;
            franchisePosition.PositionCodeId = positionCodeId;
            franchisePosition.StartDt = startDt;
            franchisePosition.mod_usr = mod_usr;
            franchisePosition.mod_date = mod_date;
            return franchisePosition;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FranchisePositionId
        {
            get
            {
                return _FranchisePositionId;
            }
            set
            {
                if (_FranchisePositionId != value)
                {
                    OnFranchisePositionIdChanging(value);
                    ReportPropertyChanging("FranchisePositionId");
                    _FranchisePositionId = StructuralObject.SetValidValue(value, "FranchisePositionId");
                    ReportPropertyChanged("FranchisePositionId");
                    OnFranchisePositionIdChanged();
                }
            }
        }
        private global::System.Int32 _FranchisePositionId;
        partial void OnFranchisePositionIdChanging(global::System.Int32 value);
        partial void OnFranchisePositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FranchiseId
        {
            get
            {
                return _FranchiseId;
            }
            set
            {
                OnFranchiseIdChanging(value);
                ReportPropertyChanging("FranchiseId");
                _FranchiseId = StructuralObject.SetValidValue(value, "FranchiseId");
                ReportPropertyChanged("FranchiseId");
                OnFranchiseIdChanged();
            }
        }
        private global::System.Int32 _FranchiseId;
        partial void OnFranchiseIdChanging(global::System.Int32 value);
        partial void OnFranchiseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value, "PersonId");
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionCodeId
        {
            get
            {
                return _PositionCodeId;
            }
            set
            {
                OnPositionCodeIdChanging(value);
                ReportPropertyChanging("PositionCodeId");
                _PositionCodeId = StructuralObject.SetValidValue(value, "PositionCodeId");
                ReportPropertyChanged("PositionCodeId");
                OnPositionCodeIdChanged();
            }
        }
        private global::System.Int32 _PositionCodeId;
        partial void OnPositionCodeIdChanging(global::System.Int32 value);
        partial void OnPositionCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Franc__20F7B6A5", "Franchise")]
        public Franchise Franchise
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20F7B6A5", "Franchise").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20F7B6A5", "Franchise").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Franchise> FranchiseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20F7B6A5", "Franchise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20F7B6A5", "Franchise", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Perso__79DDE984", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SportsModel.FK__Franchise__Perso__79DDE984", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SportsModel.FK__Franchise__Perso__79DDE984", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SportsModel.FK__Franchise__Perso__79DDE984", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SportsModel.FK__Franchise__Perso__79DDE984", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Posit__7AD20DBD", "PositionCode")]
        public PositionCode PositionCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PositionCode>("SportsModel.FK__Franchise__Posit__7AD20DBD", "PositionCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PositionCode>("SportsModel.FK__Franchise__Posit__7AD20DBD", "PositionCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PositionCode> PositionCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PositionCode>("SportsModel.FK__Franchise__Posit__7AD20DBD", "PositionCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PositionCode>("SportsModel.FK__Franchise__Posit__7AD20DBD", "PositionCode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="FranchiseSportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FranchiseSportType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FranchiseSportType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="franchiseId">Initial value of the FranchiseId property.</param>
        /// <param name="sportTypeCode">Initial value of the SportTypeCode property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static FranchiseSportType CreateFranchiseSportType(global::System.Int32 id, global::System.Int32 franchiseId, global::System.String sportTypeCode, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            FranchiseSportType franchiseSportType = new FranchiseSportType();
            franchiseSportType.id = id;
            franchiseSportType.FranchiseId = franchiseId;
            franchiseSportType.SportTypeCode = sportTypeCode;
            franchiseSportType.StartDt = startDt;
            franchiseSportType.mod_usr = mod_usr;
            franchiseSportType.mod_date = mod_date;
            return franchiseSportType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FranchiseId
        {
            get
            {
                return _FranchiseId;
            }
            set
            {
                OnFranchiseIdChanging(value);
                ReportPropertyChanging("FranchiseId");
                _FranchiseId = StructuralObject.SetValidValue(value, "FranchiseId");
                ReportPropertyChanged("FranchiseId");
                OnFranchiseIdChanged();
            }
        }
        private global::System.Int32 _FranchiseId;
        partial void OnFranchiseIdChanging(global::System.Int32 value);
        partial void OnFranchiseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeCode
        {
            get
            {
                return _SportTypeCode;
            }
            set
            {
                OnSportTypeCodeChanging(value);
                ReportPropertyChanging("SportTypeCode");
                _SportTypeCode = StructuralObject.SetValidValue(value, false, "SportTypeCode");
                ReportPropertyChanged("SportTypeCode");
                OnSportTypeCodeChanged();
            }
        }
        private global::System.String _SportTypeCode;
        partial void OnSportTypeCodeChanging(global::System.String value);
        partial void OnSportTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Franc__20C2AC7B", "Franchise")]
        public Franchise Franchise
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20C2AC7B", "Franchise").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20C2AC7B", "Franchise").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Franchise> FranchiseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20C2AC7B", "Franchise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Franchise>("SportsModel.FK__Franchise__Franc__20C2AC7B", "Franchise", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Sport__21B6D0B4", "SportType")]
        public SportType SportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__21B6D0B4", "SportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__21B6D0B4", "SportType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportType> SportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__21B6D0B4", "SportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportType>("SportsModel.FK__Franchise__Sport__21B6D0B4", "SportType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="FranchiseTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FranchiseTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FranchiseTeam object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="seasonid">Initial value of the seasonid property.</param>
        /// <param name="franchiseid">Initial value of the franchiseid property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        public static FranchiseTeam CreateFranchiseTeam(global::System.Int32 id, global::System.Int32 seasonid, global::System.Int32 franchiseid, global::System.DateTime startDt)
        {
            FranchiseTeam franchiseTeam = new FranchiseTeam();
            franchiseTeam.id = id;
            franchiseTeam.seasonid = seasonid;
            franchiseTeam.franchiseid = franchiseid;
            franchiseTeam.StartDt = startDt;
            return franchiseTeam;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 seasonid
        {
            get
            {
                return _seasonid;
            }
            set
            {
                OnseasonidChanging(value);
                ReportPropertyChanging("seasonid");
                _seasonid = StructuralObject.SetValidValue(value, "seasonid");
                ReportPropertyChanged("seasonid");
                OnseasonidChanged();
            }
        }
        private global::System.Int32 _seasonid;
        partial void OnseasonidChanging(global::System.Int32 value);
        partial void OnseasonidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 franchiseid
        {
            get
            {
                return _franchiseid;
            }
            set
            {
                OnfranchiseidChanging(value);
                ReportPropertyChanging("franchiseid");
                _franchiseid = StructuralObject.SetValidValue(value, "franchiseid");
                ReportPropertyChanged("franchiseid");
                OnfranchiseidChanged();
            }
        }
        private global::System.Int32 _franchiseid;
        partial void OnfranchiseidChanging(global::System.Int32 value);
        partial void OnfranchiseidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String div_cd
        {
            get
            {
                return _div_cd;
            }
            set
            {
                Ondiv_cdChanging(value);
                ReportPropertyChanging("div_cd");
                _div_cd = StructuralObject.SetValidValue(value, true, "div_cd");
                ReportPropertyChanged("div_cd");
                Ondiv_cdChanged();
            }
        }
        private global::System.String _div_cd;
        partial void Ondiv_cdChanging(global::System.String value);
        partial void Ondiv_cdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mod_user
        {
            get
            {
                return _mod_user;
            }
            set
            {
                Onmod_userChanging(value);
                ReportPropertyChanging("mod_user");
                _mod_user = StructuralObject.SetValidValue(value, true, "mod_user");
                ReportPropertyChanged("mod_user");
                Onmod_userChanged();
            }
        }
        private global::System.String _mod_user;
        partial void Onmod_userChanging(global::System.String value);
        partial void Onmod_userChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _mod_date;
        partial void Onmod_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__franc__4905A7FF", "Franchise")]
        public Franchise Franchise
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__franc__4905A7FF", "Franchise").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__franc__4905A7FF", "Franchise").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Franchise> FranchiseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Franchise>("SportsModel.FK__Franchise__franc__4905A7FF", "Franchise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Franchise>("SportsModel.FK__Franchise__franc__4905A7FF", "Franchise", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__seaso__49F9CC38", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("SportsModel.FK__Franchise__seaso__49F9CC38", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("SportsModel.FK__Franchise__seaso__49F9CC38", "Season").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("SportsModel.FK__Franchise__seaso__49F9CC38", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("SportsModel.FK__Franchise__seaso__49F9CC38", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personid">Initial value of the Personid property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        /// <param name="sportTypeGroupCode">Initial value of the SportTypeGroupCode property.</param>
        public static Person CreatePerson(global::System.Int32 personid, global::System.String firstName, global::System.String lastName, global::System.String mod_usr, global::System.DateTime mod_date, global::System.String sportTypeGroupCode)
        {
            Person person = new Person();
            person.Personid = personid;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.mod_usr = mod_usr;
            person.mod_date = mod_date;
            person.SportTypeGroupCode = sportTypeGroupCode;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Personid
        {
            get
            {
                return _Personid;
            }
            set
            {
                if (_Personid != value)
                {
                    OnPersonidChanging(value);
                    ReportPropertyChanging("Personid");
                    _Personid = StructuralObject.SetValidValue(value, "Personid");
                    ReportPropertyChanged("Personid");
                    OnPersonidChanged();
                }
            }
        }
        private global::System.Int32 _Personid;
        partial void OnPersonidChanging(global::System.Int32 value);
        partial void OnPersonidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommonName
        {
            get
            {
                return _CommonName;
            }
            set
            {
                OnCommonNameChanging(value);
                ReportPropertyChanging("CommonName");
                _CommonName = StructuralObject.SetValidValue(value, true, "CommonName");
                ReportPropertyChanged("CommonName");
                OnCommonNameChanged();
            }
        }
        private global::System.String _CommonName;
        partial void OnCommonNameChanging(global::System.String value);
        partial void OnCommonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, true, "Suffix");
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOD
        {
            get
            {
                return _DOD;
            }
            set
            {
                OnDODChanging(value);
                ReportPropertyChanging("DOD");
                _DOD = StructuralObject.SetValidValue(value, "DOD");
                ReportPropertyChanged("DOD");
                OnDODChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOD;
        partial void OnDODChanging(Nullable<global::System.DateTime> value);
        partial void OnDODChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeGroupCode
        {
            get
            {
                return _SportTypeGroupCode;
            }
            set
            {
                OnSportTypeGroupCodeChanging(value);
                ReportPropertyChanging("SportTypeGroupCode");
                _SportTypeGroupCode = StructuralObject.SetValidValue(value, false, "SportTypeGroupCode");
                ReportPropertyChanged("SportTypeGroupCode");
                OnSportTypeGroupCodeChanged();
            }
        }
        private global::System.String _SportTypeGroupCode;
        partial void OnSportTypeGroupCodeChanging(global::System.String value);
        partial void OnSportTypeGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDt;
        partial void OnStartDtChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Perso__79DDE984", "FranchisePosition")]
        public EntityCollection<FranchisePosition> FranchisePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchisePosition>("SportsModel.FK__Franchise__Perso__79DDE984", "FranchisePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchisePosition>("SportsModel.FK__Franchise__Perso__79DDE984", "FranchisePosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Person__SportTyp__298CFCA6", "SportTypeGroup")]
        public SportTypeGroup SportTypeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__Person__SportTyp__298CFCA6", "SportTypeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__Person__SportTyp__298CFCA6", "SportTypeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportTypeGroup> SportTypeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__Person__SportTyp__298CFCA6", "SportTypeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportTypeGroup>("SportsModel.FK__Person__SportTyp__298CFCA6", "SportTypeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="PositionCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PositionCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PositionCode object.
        /// </summary>
        /// <param name="positionCodeId">Initial value of the PositionCodeId property.</param>
        /// <param name="positionCode1">Initial value of the PositionCode1 property.</param>
        /// <param name="positionDescrip">Initial value of the PositionDescrip property.</param>
        /// <param name="sportTypeCode">Initial value of the SportTypeCode property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static PositionCode CreatePositionCode(global::System.Int32 positionCodeId, global::System.String positionCode1, global::System.String positionDescrip, global::System.String sportTypeCode, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            PositionCode positionCode = new PositionCode();
            positionCode.PositionCodeId = positionCodeId;
            positionCode.PositionCode1 = positionCode1;
            positionCode.PositionDescrip = positionDescrip;
            positionCode.SportTypeCode = sportTypeCode;
            positionCode.StartDt = startDt;
            positionCode.mod_usr = mod_usr;
            positionCode.mod_date = mod_date;
            return positionCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionCodeId
        {
            get
            {
                return _PositionCodeId;
            }
            set
            {
                if (_PositionCodeId != value)
                {
                    OnPositionCodeIdChanging(value);
                    ReportPropertyChanging("PositionCodeId");
                    _PositionCodeId = StructuralObject.SetValidValue(value, "PositionCodeId");
                    ReportPropertyChanged("PositionCodeId");
                    OnPositionCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _PositionCodeId;
        partial void OnPositionCodeIdChanging(global::System.Int32 value);
        partial void OnPositionCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PositionCode1
        {
            get
            {
                return _PositionCode1;
            }
            set
            {
                OnPositionCode1Changing(value);
                ReportPropertyChanging("PositionCode1");
                _PositionCode1 = StructuralObject.SetValidValue(value, false, "PositionCode1");
                ReportPropertyChanged("PositionCode1");
                OnPositionCode1Changed();
            }
        }
        private global::System.String _PositionCode1;
        partial void OnPositionCode1Changing(global::System.String value);
        partial void OnPositionCode1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PositionDescrip
        {
            get
            {
                return _PositionDescrip;
            }
            set
            {
                OnPositionDescripChanging(value);
                ReportPropertyChanging("PositionDescrip");
                _PositionDescrip = StructuralObject.SetValidValue(value, false, "PositionDescrip");
                ReportPropertyChanged("PositionDescrip");
                OnPositionDescripChanged();
            }
        }
        private global::System.String _PositionDescrip;
        partial void OnPositionDescripChanging(global::System.String value);
        partial void OnPositionDescripChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeCode
        {
            get
            {
                return _SportTypeCode;
            }
            set
            {
                OnSportTypeCodeChanging(value);
                ReportPropertyChanging("SportTypeCode");
                _SportTypeCode = StructuralObject.SetValidValue(value, false, "SportTypeCode");
                ReportPropertyChanged("SportTypeCode");
                OnSportTypeCodeChanged();
            }
        }
        private global::System.String _SportTypeCode;
        partial void OnSportTypeCodeChanging(global::System.String value);
        partial void OnSportTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Posit__7AD20DBD", "FranchisePosition")]
        public EntityCollection<FranchisePosition> FranchisePositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchisePosition>("SportsModel.FK__Franchise__Posit__7AD20DBD", "FranchisePosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchisePosition>("SportsModel.FK__Franchise__Posit__7AD20DBD", "FranchisePosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__PositionC__Sport__760D58A0", "SportType")]
        public SportType SportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__PositionC__Sport__760D58A0", "SportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__PositionC__Sport__760D58A0", "SportType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportType> SportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__PositionC__Sport__760D58A0", "SportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportType>("SportsModel.FK__PositionC__Sport__760D58A0", "SportType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Season object.
        /// </summary>
        /// <param name="seasonid">Initial value of the seasonid property.</param>
        /// <param name="sportTypeCode">Initial value of the SportTypeCode property.</param>
        /// <param name="startdate">Initial value of the startdate property.</param>
        /// <param name="mod_user">Initial value of the mod_user property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static Season CreateSeason(global::System.Int32 seasonid, global::System.String sportTypeCode, global::System.DateTime startdate, global::System.String mod_user, global::System.DateTime mod_date)
        {
            Season season = new Season();
            season.seasonid = seasonid;
            season.SportTypeCode = sportTypeCode;
            season.startdate = startdate;
            season.mod_user = mod_user;
            season.mod_date = mod_date;
            return season;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 seasonid
        {
            get
            {
                return _seasonid;
            }
            set
            {
                if (_seasonid != value)
                {
                    OnseasonidChanging(value);
                    ReportPropertyChanging("seasonid");
                    _seasonid = StructuralObject.SetValidValue(value, "seasonid");
                    ReportPropertyChanged("seasonid");
                    OnseasonidChanged();
                }
            }
        }
        private global::System.Int32 _seasonid;
        partial void OnseasonidChanging(global::System.Int32 value);
        partial void OnseasonidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeCode
        {
            get
            {
                return _SportTypeCode;
            }
            set
            {
                OnSportTypeCodeChanging(value);
                ReportPropertyChanging("SportTypeCode");
                _SportTypeCode = StructuralObject.SetValidValue(value, false, "SportTypeCode");
                ReportPropertyChanged("SportTypeCode");
                OnSportTypeCodeChanged();
            }
        }
        private global::System.String _SportTypeCode;
        partial void OnSportTypeCodeChanging(global::System.String value);
        partial void OnSportTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime startdate
        {
            get
            {
                return _startdate;
            }
            set
            {
                OnstartdateChanging(value);
                ReportPropertyChanging("startdate");
                _startdate = StructuralObject.SetValidValue(value, "startdate");
                ReportPropertyChanged("startdate");
                OnstartdateChanged();
            }
        }
        private global::System.DateTime _startdate;
        partial void OnstartdateChanging(global::System.DateTime value);
        partial void OnstartdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_user
        {
            get
            {
                return _mod_user;
            }
            set
            {
                Onmod_userChanging(value);
                ReportPropertyChanging("mod_user");
                _mod_user = StructuralObject.SetValidValue(value, false, "mod_user");
                ReportPropertyChanged("mod_user");
                Onmod_userChanged();
            }
        }
        private global::System.String _mod_user;
        partial void Onmod_userChanging(global::System.String value);
        partial void Onmod_userChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__seaso__49F9CC38", "FranchiseTeam")]
        public EntityCollection<FranchiseTeam> FranchiseTeams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchiseTeam>("SportsModel.FK__Franchise__seaso__49F9CC38", "FranchiseTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchiseTeam>("SportsModel.FK__Franchise__seaso__49F9CC38", "FranchiseTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Season__SportTyp__27D9BE5E", "SportType")]
        public SportType SportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Season__SportTyp__27D9BE5E", "SportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Season__SportTyp__27D9BE5E", "SportType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportType> SportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("SportsModel.FK__Season__SportTyp__27D9BE5E", "SportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportType>("SportsModel.FK__Season__SportTyp__27D9BE5E", "SportType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="SportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportType object.
        /// </summary>
        /// <param name="sportTypeCode">Initial value of the SportTypeCode property.</param>
        /// <param name="sportTypeGroupCode">Initial value of the SportTypeGroupCode property.</param>
        /// <param name="sportTypeDescrip">Initial value of the SportTypeDescrip property.</param>
        /// <param name="seasonStartMonth">Initial value of the SeasonStartMonth property.</param>
        /// <param name="mod_user">Initial value of the mod_user property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static SportType CreateSportType(global::System.String sportTypeCode, global::System.String sportTypeGroupCode, global::System.String sportTypeDescrip, global::System.Int32 seasonStartMonth, global::System.String mod_user, global::System.DateTime mod_date)
        {
            SportType sportType = new SportType();
            sportType.SportTypeCode = sportTypeCode;
            sportType.SportTypeGroupCode = sportTypeGroupCode;
            sportType.SportTypeDescrip = sportTypeDescrip;
            sportType.SeasonStartMonth = seasonStartMonth;
            sportType.mod_user = mod_user;
            sportType.mod_date = mod_date;
            return sportType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeCode
        {
            get
            {
                return _SportTypeCode;
            }
            set
            {
                if (_SportTypeCode != value)
                {
                    OnSportTypeCodeChanging(value);
                    ReportPropertyChanging("SportTypeCode");
                    _SportTypeCode = StructuralObject.SetValidValue(value, false, "SportTypeCode");
                    ReportPropertyChanged("SportTypeCode");
                    OnSportTypeCodeChanged();
                }
            }
        }
        private global::System.String _SportTypeCode;
        partial void OnSportTypeCodeChanging(global::System.String value);
        partial void OnSportTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeGroupCode
        {
            get
            {
                return _SportTypeGroupCode;
            }
            set
            {
                OnSportTypeGroupCodeChanging(value);
                ReportPropertyChanging("SportTypeGroupCode");
                _SportTypeGroupCode = StructuralObject.SetValidValue(value, false, "SportTypeGroupCode");
                ReportPropertyChanged("SportTypeGroupCode");
                OnSportTypeGroupCodeChanged();
            }
        }
        private global::System.String _SportTypeGroupCode;
        partial void OnSportTypeGroupCodeChanging(global::System.String value);
        partial void OnSportTypeGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeDescrip
        {
            get
            {
                return _SportTypeDescrip;
            }
            set
            {
                OnSportTypeDescripChanging(value);
                ReportPropertyChanging("SportTypeDescrip");
                _SportTypeDescrip = StructuralObject.SetValidValue(value, false, "SportTypeDescrip");
                ReportPropertyChanged("SportTypeDescrip");
                OnSportTypeDescripChanged();
            }
        }
        private global::System.String _SportTypeDescrip;
        partial void OnSportTypeDescripChanging(global::System.String value);
        partial void OnSportTypeDescripChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeasonStartMonth
        {
            get
            {
                return _SeasonStartMonth;
            }
            set
            {
                OnSeasonStartMonthChanging(value);
                ReportPropertyChanging("SeasonStartMonth");
                _SeasonStartMonth = StructuralObject.SetValidValue(value, "SeasonStartMonth");
                ReportPropertyChanged("SeasonStartMonth");
                OnSeasonStartMonthChanged();
            }
        }
        private global::System.Int32 _SeasonStartMonth;
        partial void OnSeasonStartMonthChanging(global::System.Int32 value);
        partial void OnSeasonStartMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_user
        {
            get
            {
                return _mod_user;
            }
            set
            {
                Onmod_userChanging(value);
                ReportPropertyChanging("mod_user");
                _mod_user = StructuralObject.SetValidValue(value, false, "mod_user");
                ReportPropertyChanged("mod_user");
                Onmod_userChanged();
            }
        }
        private global::System.String _mod_user;
        partial void Onmod_userChanging(global::System.String value);
        partial void Onmod_userChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTypeShortName
        {
            get
            {
                return _SportTypeShortName;
            }
            set
            {
                OnSportTypeShortNameChanging(value);
                ReportPropertyChanging("SportTypeShortName");
                _SportTypeShortName = StructuralObject.SetValidValue(value, true, "SportTypeShortName");
                ReportPropertyChanged("SportTypeShortName");
                OnSportTypeShortNameChanged();
            }
        }
        private global::System.String _SportTypeShortName;
        partial void OnSportTypeShortNameChanging(global::System.String value);
        partial void OnSportTypeShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SportStartYear
        {
            get
            {
                return _SportStartYear;
            }
            set
            {
                OnSportStartYearChanging(value);
                ReportPropertyChanging("SportStartYear");
                _SportStartYear = StructuralObject.SetValidValue(value, "SportStartYear");
                ReportPropertyChanged("SportStartYear");
                OnSportStartYearChanged();
            }
        }
        private Nullable<global::System.Int32> _SportStartYear;
        partial void OnSportStartYearChanging(Nullable<global::System.Int32> value);
        partial void OnSportStartYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentTypeCode
        {
            get
            {
                return _ParentTypeCode;
            }
            set
            {
                OnParentTypeCodeChanging(value);
                ReportPropertyChanging("ParentTypeCode");
                _ParentTypeCode = StructuralObject.SetValidValue(value, true, "ParentTypeCode");
                ReportPropertyChanged("ParentTypeCode");
                OnParentTypeCodeChanged();
            }
        }
        private global::System.String _ParentTypeCode;
        partial void OnParentTypeCodeChanging(global::System.String value);
        partial void OnParentTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SportEndYear
        {
            get
            {
                return _SportEndYear;
            }
            set
            {
                OnSportEndYearChanging(value);
                ReportPropertyChanging("SportEndYear");
                _SportEndYear = StructuralObject.SetValidValue(value, "SportEndYear");
                ReportPropertyChanged("SportEndYear");
                OnSportEndYearChanged();
            }
        }
        private Nullable<global::System.Int32> _SportEndYear;
        partial void OnSportEndYearChanging(Nullable<global::System.Int32> value);
        partial void OnSportEndYearChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Sport__1B3EDD4F", "Franchise")]
        public EntityCollection<Franchise> Franchises
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Franchise>("SportsModel.FK__Franchise__Sport__1B3EDD4F", "Franchise");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Franchise>("SportsModel.FK__Franchise__Sport__1B3EDD4F", "Franchise", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Franchise__Sport__21B6D0B4", "FranchiseSportType")]
        public EntityCollection<FranchiseSportType> FranchiseSportTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FranchiseSportType>("SportsModel.FK__Franchise__Sport__21B6D0B4", "FranchiseSportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FranchiseSportType>("SportsModel.FK__Franchise__Sport__21B6D0B4", "FranchiseSportType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__PositionC__Sport__760D58A0", "PositionCode")]
        public EntityCollection<PositionCode> PositionCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PositionCode>("SportsModel.FK__PositionC__Sport__760D58A0", "PositionCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PositionCode>("SportsModel.FK__PositionC__Sport__760D58A0", "PositionCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Season__SportTyp__27D9BE5E", "Season")]
        public EntityCollection<Season> Seasons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Season>("SportsModel.FK__Season__SportTyp__27D9BE5E", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Season>("SportsModel.FK__Season__SportTyp__27D9BE5E", "Season", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__SportType__Sport__1BFDF75E", "SportTypeGroup")]
        public SportTypeGroup SportTypeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__SportType__Sport__1BFDF75E", "SportTypeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__SportType__Sport__1BFDF75E", "SportTypeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportTypeGroup> SportTypeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__SportType__Sport__1BFDF75E", "SportTypeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportTypeGroup>("SportsModel.FK__SportType__Sport__1BFDF75E", "SportTypeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="SportTypeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportTypeGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportTypeGroup object.
        /// </summary>
        /// <param name="sportTypeGroupCode">Initial value of the SportTypeGroupCode property.</param>
        /// <param name="sportTypeGroupDescrip">Initial value of the SportTypeGroupDescrip property.</param>
        /// <param name="mod_user">Initial value of the mod_user property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static SportTypeGroup CreateSportTypeGroup(global::System.String sportTypeGroupCode, global::System.String sportTypeGroupDescrip, global::System.String mod_user, global::System.DateTime mod_date)
        {
            SportTypeGroup sportTypeGroup = new SportTypeGroup();
            sportTypeGroup.SportTypeGroupCode = sportTypeGroupCode;
            sportTypeGroup.SportTypeGroupDescrip = sportTypeGroupDescrip;
            sportTypeGroup.mod_user = mod_user;
            sportTypeGroup.mod_date = mod_date;
            return sportTypeGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeGroupCode
        {
            get
            {
                return _SportTypeGroupCode;
            }
            set
            {
                if (_SportTypeGroupCode != value)
                {
                    OnSportTypeGroupCodeChanging(value);
                    ReportPropertyChanging("SportTypeGroupCode");
                    _SportTypeGroupCode = StructuralObject.SetValidValue(value, false, "SportTypeGroupCode");
                    ReportPropertyChanged("SportTypeGroupCode");
                    OnSportTypeGroupCodeChanged();
                }
            }
        }
        private global::System.String _SportTypeGroupCode;
        partial void OnSportTypeGroupCodeChanging(global::System.String value);
        partial void OnSportTypeGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportTypeGroupDescrip
        {
            get
            {
                return _SportTypeGroupDescrip;
            }
            set
            {
                OnSportTypeGroupDescripChanging(value);
                ReportPropertyChanging("SportTypeGroupDescrip");
                _SportTypeGroupDescrip = StructuralObject.SetValidValue(value, false, "SportTypeGroupDescrip");
                ReportPropertyChanged("SportTypeGroupDescrip");
                OnSportTypeGroupDescripChanged();
            }
        }
        private global::System.String _SportTypeGroupDescrip;
        partial void OnSportTypeGroupDescripChanging(global::System.String value);
        partial void OnSportTypeGroupDescripChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_user
        {
            get
            {
                return _mod_user;
            }
            set
            {
                Onmod_userChanging(value);
                ReportPropertyChanging("mod_user");
                _mod_user = StructuralObject.SetValidValue(value, false, "mod_user");
                ReportPropertyChanged("mod_user");
                Onmod_userChanged();
            }
        }
        private global::System.String _mod_user;
        partial void Onmod_userChanging(global::System.String value);
        partial void Onmod_userChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Person__SportTyp__298CFCA6", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SportsModel.FK__Person__SportTyp__298CFCA6", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SportsModel.FK__Person__SportTyp__298CFCA6", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__SportType__Sport__1BFDF75E", "SportType")]
        public EntityCollection<SportType> SportTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SportType>("SportsModel.FK__SportType__Sport__1BFDF75E", "SportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SportType>("SportsModel.FK__SportType__Sport__1BFDF75E", "SportType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__StadiumSu__Sport__07F6FEB1", "StadiumSurfaceCode")]
        public EntityCollection<StadiumSurfaceCode> StadiumSurfaceCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StadiumSurfaceCode>("SportsModel.FK__StadiumSu__Sport__07F6FEB1", "StadiumSurfaceCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StadiumSurfaceCode>("SportsModel.FK__StadiumSu__Sport__07F6FEB1", "StadiumSurfaceCode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="Stadium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stadium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stadium object.
        /// </summary>
        /// <param name="stadiumId">Initial value of the StadiumId property.</param>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="stadiumSurfaceCodeId">Initial value of the StadiumSurfaceCodeId property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        public static Stadium CreateStadium(global::System.Int32 stadiumId, global::System.Int32 addressId, global::System.Int32 stadiumSurfaceCodeId, global::System.DateTime startDt)
        {
            Stadium stadium = new Stadium();
            stadium.StadiumId = stadiumId;
            stadium.AddressId = addressId;
            stadium.StadiumSurfaceCodeId = stadiumSurfaceCodeId;
            stadium.StartDt = startDt;
            return stadium;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StadiumId
        {
            get
            {
                return _StadiumId;
            }
            set
            {
                if (_StadiumId != value)
                {
                    OnStadiumIdChanging(value);
                    ReportPropertyChanging("StadiumId");
                    _StadiumId = StructuralObject.SetValidValue(value, "StadiumId");
                    ReportPropertyChanged("StadiumId");
                    OnStadiumIdChanged();
                }
            }
        }
        private global::System.Int32 _StadiumId;
        partial void OnStadiumIdChanging(global::System.Int32 value);
        partial void OnStadiumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value, "AddressId");
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StadiumName
        {
            get
            {
                return _StadiumName;
            }
            set
            {
                OnStadiumNameChanging(value);
                ReportPropertyChanging("StadiumName");
                _StadiumName = StructuralObject.SetValidValue(value, true, "StadiumName");
                ReportPropertyChanged("StadiumName");
                OnStadiumNameChanged();
            }
        }
        private global::System.String _StadiumName;
        partial void OnStadiumNameChanging(global::System.String value);
        partial void OnStadiumNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StadiumSurfaceCodeId
        {
            get
            {
                return _StadiumSurfaceCodeId;
            }
            set
            {
                OnStadiumSurfaceCodeIdChanging(value);
                ReportPropertyChanging("StadiumSurfaceCodeId");
                _StadiumSurfaceCodeId = StructuralObject.SetValidValue(value, "StadiumSurfaceCodeId");
                ReportPropertyChanged("StadiumSurfaceCodeId");
                OnStadiumSurfaceCodeIdChanged();
            }
        }
        private global::System.Int32 _StadiumSurfaceCodeId;
        partial void OnStadiumSurfaceCodeIdChanging(global::System.Int32 value);
        partial void OnStadiumSurfaceCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, true, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _mod_date;
        partial void Onmod_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onmod_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTypeGroupCode
        {
            get
            {
                return _SportTypeGroupCode;
            }
            set
            {
                OnSportTypeGroupCodeChanging(value);
                ReportPropertyChanging("SportTypeGroupCode");
                _SportTypeGroupCode = StructuralObject.SetValidValue(value, true, "SportTypeGroupCode");
                ReportPropertyChanged("SportTypeGroupCode");
                OnSportTypeGroupCodeChanged();
            }
        }
        private global::System.String _SportTypeGroupCode;
        partial void OnSportTypeGroupCodeChanging(global::System.String value);
        partial void OnSportTypeGroupCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Stadium__Stadium__593C0FC8", "StadiumSurfaceCode")]
        public StadiumSurfaceCode StadiumSurfaceCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StadiumSurfaceCode>("SportsModel.FK__Stadium__Stadium__593C0FC8", "StadiumSurfaceCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StadiumSurfaceCode>("SportsModel.FK__Stadium__Stadium__593C0FC8", "StadiumSurfaceCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StadiumSurfaceCode> StadiumSurfaceCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StadiumSurfaceCode>("SportsModel.FK__Stadium__Stadium__593C0FC8", "StadiumSurfaceCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StadiumSurfaceCode>("SportsModel.FK__Stadium__Stadium__593C0FC8", "StadiumSurfaceCode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="StadiumSurfaceCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StadiumSurfaceCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StadiumSurfaceCode object.
        /// </summary>
        /// <param name="stadiumSurfaceCodeId">Initial value of the StadiumSurfaceCodeId property.</param>
        /// <param name="stadiumSurfaceCode1">Initial value of the StadiumSurfaceCode1 property.</param>
        /// <param name="surfaceName">Initial value of the SurfaceName property.</param>
        /// <param name="startDt">Initial value of the StartDt property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static StadiumSurfaceCode CreateStadiumSurfaceCode(global::System.Int32 stadiumSurfaceCodeId, global::System.String stadiumSurfaceCode1, global::System.String surfaceName, global::System.DateTime startDt, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            StadiumSurfaceCode stadiumSurfaceCode = new StadiumSurfaceCode();
            stadiumSurfaceCode.StadiumSurfaceCodeId = stadiumSurfaceCodeId;
            stadiumSurfaceCode.StadiumSurfaceCode1 = stadiumSurfaceCode1;
            stadiumSurfaceCode.SurfaceName = surfaceName;
            stadiumSurfaceCode.StartDt = startDt;
            stadiumSurfaceCode.mod_usr = mod_usr;
            stadiumSurfaceCode.mod_date = mod_date;
            return stadiumSurfaceCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StadiumSurfaceCodeId
        {
            get
            {
                return _StadiumSurfaceCodeId;
            }
            set
            {
                if (_StadiumSurfaceCodeId != value)
                {
                    OnStadiumSurfaceCodeIdChanging(value);
                    ReportPropertyChanging("StadiumSurfaceCodeId");
                    _StadiumSurfaceCodeId = StructuralObject.SetValidValue(value, "StadiumSurfaceCodeId");
                    ReportPropertyChanged("StadiumSurfaceCodeId");
                    OnStadiumSurfaceCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _StadiumSurfaceCodeId;
        partial void OnStadiumSurfaceCodeIdChanging(global::System.Int32 value);
        partial void OnStadiumSurfaceCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StadiumSurfaceCode1
        {
            get
            {
                return _StadiumSurfaceCode1;
            }
            set
            {
                OnStadiumSurfaceCode1Changing(value);
                ReportPropertyChanging("StadiumSurfaceCode1");
                _StadiumSurfaceCode1 = StructuralObject.SetValidValue(value, false, "StadiumSurfaceCode1");
                ReportPropertyChanged("StadiumSurfaceCode1");
                OnStadiumSurfaceCode1Changed();
            }
        }
        private global::System.String _StadiumSurfaceCode1;
        partial void OnStadiumSurfaceCode1Changing(global::System.String value);
        partial void OnStadiumSurfaceCode1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SurfaceName
        {
            get
            {
                return _SurfaceName;
            }
            set
            {
                OnSurfaceNameChanging(value);
                ReportPropertyChanging("SurfaceName");
                _SurfaceName = StructuralObject.SetValidValue(value, false, "SurfaceName");
                ReportPropertyChanged("SurfaceName");
                OnSurfaceNameChanged();
            }
        }
        private global::System.String _SurfaceName;
        partial void OnSurfaceNameChanging(global::System.String value);
        partial void OnSurfaceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDt
        {
            get
            {
                return _StartDt;
            }
            set
            {
                OnStartDtChanging(value);
                ReportPropertyChanging("StartDt");
                _StartDt = StructuralObject.SetValidValue(value, "StartDt");
                ReportPropertyChanged("StartDt");
                OnStartDtChanged();
            }
        }
        private global::System.DateTime _StartDt;
        partial void OnStartDtChanging(global::System.DateTime value);
        partial void OnStartDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDt
        {
            get
            {
                return _EndDt;
            }
            set
            {
                OnEndDtChanging(value);
                ReportPropertyChanging("EndDt");
                _EndDt = StructuralObject.SetValidValue(value, "EndDt");
                ReportPropertyChanged("EndDt");
                OnEndDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDt;
        partial void OnEndDtChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SportTypeGroupCode
        {
            get
            {
                return _SportTypeGroupCode;
            }
            set
            {
                OnSportTypeGroupCodeChanging(value);
                ReportPropertyChanging("SportTypeGroupCode");
                _SportTypeGroupCode = StructuralObject.SetValidValue(value, true, "SportTypeGroupCode");
                ReportPropertyChanged("SportTypeGroupCode");
                OnSportTypeGroupCodeChanged();
            }
        }
        private global::System.String _SportTypeGroupCode;
        partial void OnSportTypeGroupCodeChanging(global::System.String value);
        partial void OnSportTypeGroupCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__StadiumSu__Sport__07F6FEB1", "SportTypeGroup")]
        public SportTypeGroup SportTypeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__StadiumSu__Sport__07F6FEB1", "SportTypeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__StadiumSu__Sport__07F6FEB1", "SportTypeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportTypeGroup> SportTypeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportTypeGroup>("SportsModel.FK__StadiumSu__Sport__07F6FEB1", "SportTypeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportTypeGroup>("SportsModel.FK__StadiumSu__Sport__07F6FEB1", "SportTypeGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SportsModel", "FK__Stadium__Stadium__593C0FC8", "Stadium")]
        public EntityCollection<Stadium> Stadia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stadium>("SportsModel.FK__Stadium__Stadium__593C0FC8", "Stadium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stadium>("SportsModel.FK__Stadium__Stadium__593C0FC8", "Stadium", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SportsModel", Name="StateCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateCode object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="stateCode1">Initial value of the StateCode1 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mod_usr">Initial value of the mod_usr property.</param>
        /// <param name="mod_date">Initial value of the mod_date property.</param>
        public static StateCode CreateStateCode(global::System.Int32 id, global::System.String stateCode1, global::System.String name, global::System.String mod_usr, global::System.DateTime mod_date)
        {
            StateCode stateCode = new StateCode();
            stateCode.id = id;
            stateCode.StateCode1 = stateCode1;
            stateCode.Name = name;
            stateCode.mod_usr = mod_usr;
            stateCode.mod_date = mod_date;
            return stateCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateCode1
        {
            get
            {
                return _StateCode1;
            }
            set
            {
                OnStateCode1Changing(value);
                ReportPropertyChanging("StateCode1");
                _StateCode1 = StructuralObject.SetValidValue(value, false, "StateCode1");
                ReportPropertyChanged("StateCode1");
                OnStateCode1Changed();
            }
        }
        private global::System.String _StateCode1;
        partial void OnStateCode1Changing(global::System.String value);
        partial void OnStateCode1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mod_usr
        {
            get
            {
                return _mod_usr;
            }
            set
            {
                Onmod_usrChanging(value);
                ReportPropertyChanging("mod_usr");
                _mod_usr = StructuralObject.SetValidValue(value, false, "mod_usr");
                ReportPropertyChanged("mod_usr");
                Onmod_usrChanged();
            }
        }
        private global::System.String _mod_usr;
        partial void Onmod_usrChanging(global::System.String value);
        partial void Onmod_usrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime mod_date
        {
            get
            {
                return _mod_date;
            }
            set
            {
                Onmod_dateChanging(value);
                ReportPropertyChanging("mod_date");
                _mod_date = StructuralObject.SetValidValue(value, "mod_date");
                ReportPropertyChanged("mod_date");
                Onmod_dateChanged();
            }
        }
        private global::System.DateTime _mod_date;
        partial void Onmod_dateChanging(global::System.DateTime value);
        partial void Onmod_dateChanged();

        #endregion

    }

    #endregion

}
